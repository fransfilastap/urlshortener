version: '3'

services:
  # Production app service
  app:
    build: .
    profiles: ["prod"]
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=${SERVER_PORT:-8080}
      - BASE_URL=${BASE_URL:-http://localhost:8080}
      - API_KEY=${API_KEY:-your-api-key-here}
      - POSTGRES_URL=${POSTGRES_URL:-postgres://postgres:postgres@postgres:5432/urlshortener?sslmode=disable}
      - VALKEY_ADDR=${VALKEY_ADDR:-valkey:6379}
      - VALKEY_PASSWORD=${VALKEY_PASSWORD:-}
      - VALKEY_DB=${VALKEY_DB:-0}
      - VALKEY_TTL=${VALKEY_TTL:-24h}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=${LOG_FORMAT:-json}
    depends_on:
      - postgres
      - valkey
    restart: unless-stopped

  # Development app service with hot reload
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    profiles: ["dev"]
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=${SERVER_PORT:-8080}
      - BASE_URL=${BASE_URL:-http://localhost:8080}
      - API_KEY=${API_KEY:-your-api-key-here}
      - POSTGRES_URL=${POSTGRES_URL:-postgres://postgres:postgres@postgres:5432/urlshortener?sslmode=disable}
      - VALKEY_ADDR=${VALKEY_ADDR:-valkey:6379}
      - VALKEY_PASSWORD=${VALKEY_PASSWORD:-}
      - VALKEY_DB=${VALKEY_DB:-0}
      - VALKEY_TTL=${VALKEY_TTL:-24h}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_FORMAT=${LOG_FORMAT:-json}
    volumes:
      - .:/app
    depends_on:
      - postgres
      - valkey
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    profiles: ["prod", "dev", "postgres"]
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-urlshortener}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  # PostgreSQL backup service
  postgres-backup:
    image: postgres:15-alpine
    profiles: ["postgres-backup"]
    volumes:
      - postgres_backup:/backups
      - ./scripts/backup.sh:/backup.sh
    environment:
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-urlshortener}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-7}
    entrypoint: []
    command: >
      /bin/sh -c "
        chmod +x /backup.sh &&
        echo \"${BACKUP_SCHEDULE:-0 0 * * *} /backup.sh\" > /etc/crontabs/root &&
        crond -f -d 8
      "
    depends_on:
      - postgres

  # Valkey cache service
  valkey:
    image: valkey/valkey:latest
    profiles: ["prod", "dev"]
    ports:
      - "6379:6379"
    volumes:
      - valkey_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  postgres_backup:
  valkey_data:
